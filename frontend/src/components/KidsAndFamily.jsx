import 'bootstrap/dist/css/bootstrap.min.css';
import React, { useEffect, useState } from 'react';
import { Button, Container, Image } from 'react-bootstrap';
import logo from "../assets/images/MTDlogo.png";
import backarrow from "../assets/images/backarrow.jpg";
import responsivebg from "../assets/images/responsive-bg.png";
import './job-title.css';

import { useNavigate } from 'react-router-dom';
import { API_URL } from '../api';
import { useCookies } from '../hooks/useCookies';

const kidsOptions = [
    "Don't have kids",
    "Have children",
    "Prefer not to say"
]

const familyOptions = [
    "Don't have family",
    "Want children",
    "Open to children",
    "Prefer not to say"
]

export default function KidsAndFamily() {
    const [selectedHaveKids, setSelectedHaveKids] = useState(null);
    const [selectedWantKids, setSelectedWantKids] = useState(null);
    const { getCookie } = useCookies();
    const navigate = useNavigate();

    useEffect(() => {
        (async () => {
            const response = await fetch(`${API_URL}/customer/users/kids-family`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${getCookie('token')}`
                },
            });

            const data = await response.json();
            console.log(data);

            if (response.ok) {
                setSelectedHaveKids(kidsOptions[data.have_kid_id - 1]);
                setSelectedWantKids(familyOptions[data.want_kid_id - 1]);
            }
        })()
    }, [])

    async function saveHaveKids() {
        const response = await fetch(`${API_URL}/customer/users/update-have-kids`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${getCookie('token')}`
            },
            body: JSON.stringify({ have_kid_id: kidsOptions.indexOf(selectedHaveKids) + 1}),
        });

        const data = await response.json();
        console.log(data);

        if (!response.ok) {
            throw new Error('Error saving have kids');
        }
    }

    async function saveWantKids() {
        const response = await fetch(`${API_URL}/customer/users/update-want-kids`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${getCookie('token')}`
            },
            body: JSON.stringify({ want_kid_id: familyOptions.indexOf(selectedWantKids) + 1 }),
        });

        const data = await response.json();
        console.log(data);

        if (!response.ok) {
            throw new Error('Error saving want kids');
        }
    }

    async function saveAll() {
        try {
            await Promise.all([saveHaveKids(), saveWantKids()]);
            navigate('/smoke-drink');
        } catch (error) {
          
            console.error('Error saving kids and family:', error);
        }
    }

    return (
        <div className='job-container'>
            <div className='job-bg'>
                <Image className='responsive-bg' src={responsivebg} alt="Background"></Image>
            </div>
            <Container className='job-main'>
                <Container className='job-content'>
                    <Container className='logo-progressbar10'>
                        <Container className='logo-arrow10'>
                            <Image src={backarrow} className='backarrow' onClick={() => window.history.back()} alt="Back Arrow" />
                            <Image src={logo} alt="Logo" className='logo' style={{ backgroundColor: 'transparent' }} />
                        </Container>
                        <div className='track-btn10'>
                            <div></div>
                        </div>
                    </Container>
                    <Container className='job-details'>
                        <div className='your-job'>
                            <Container className='job-text'>
                                <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <circle cx="20" cy="20" r="18" fill="url(#paint0_linear_778_6323)" />
                                    <g clip-path="url(#clip0_778_6323)">
                                        <path d="M18.3984 15.808C18.3359 15.7768 18.2734 15.7768 18.2109 15.7768C17.9922 15.7768 17.7734 15.9018 17.6797 16.1518C17.6172 16.2768 17.6172 16.433 17.6797 16.5893C17.7422 16.7143 17.8672 16.8393 17.9922 16.8705C18.1172 16.933 18.2734 16.933 18.4297 16.8705C18.5547 16.808 18.6797 16.683 18.7422 16.558C18.8359 16.2143 18.6797 15.9018 18.3984 15.808ZM21.8359 16.0268C21.7734 15.9955 21.7109 15.9955 21.6484 15.9955C21.5547 15.9955 21.4922 16.0268 21.4297 16.058C21.3047 16.1205 21.1797 16.2455 21.1484 16.3705C21.0547 16.6518 21.1797 16.9643 21.4922 17.0893C21.7734 17.183 22.0859 17.058 22.2109 16.7455C22.2734 16.5893 22.2734 16.4643 22.2109 16.308C22.0859 16.183 21.9609 16.0893 21.8359 16.0268ZM20.3047 17.8393C20.2109 17.8393 20.1484 17.8705 20.0859 17.933C19.8984 18.1518 19.6797 18.2455 19.3359 17.9643C19.2109 17.8705 19.0234 17.9018 18.8984 18.0268C18.8047 18.1518 18.8359 18.3393 18.9609 18.4643C19.5234 18.9018 20.0859 18.8393 20.5234 18.3393C20.6484 18.2143 20.6172 18.0268 20.4922 17.9018C20.4297 17.8705 20.3672 17.8393 20.3047 17.8393Z" fill="white" />
                                        <path d="M14.3047 11.9019L14.5234 13.4957L14.5234 13.5582L15.1797 15.5582C15.0859 15.7769 15.1172 16.0269 15.2109 16.2457C15.3047 16.4644 15.4922 16.6207 15.7109 16.7144C15.7734 18.0269 16.5234 19.2144 17.6797 19.9332C17.6484 21.3394 17.3984 22.4019 17.0234 22.9332L17.0234 22.9644C17.0234 22.9644 17.0234 22.9957 16.9922 22.9957L15.4609 26.2457C15.3984 26.4019 15.4609 26.5582 15.5859 26.6207L14.5859 28.4957C14.5234 28.6519 14.4922 28.8082 14.4922 28.9332C14.4922 29.3394 14.7422 29.7144 15.1172 29.9019C15.3672 30.0269 15.6484 30.0269 15.9297 29.9332C16.2109 29.8394 16.3984 29.6519 16.5234 29.4019L17.5234 27.5269C17.6172 27.5582 17.7422 27.4957 17.8047 27.4332C18.0859 27.0894 18.4922 26.7457 19.0547 26.3707C19.7422 25.9332 20.6172 25.9644 21.2422 26.4644C21.8359 26.9332 22.4297 27.4644 22.4297 27.4644C22.4922 27.5269 22.6172 27.5582 22.7109 27.5269L23.7109 29.3707C23.8359 29.6207 24.0547 29.8394 24.3047 29.9332C24.5859 30.0269 24.8672 30.0269 25.1172 29.9019C25.4922 29.7144 25.7422 29.3394 25.7422 28.9332C25.7422 28.7769 25.7109 28.6207 25.6484 28.4644L24.6484 26.6207C24.6797 26.5894 24.7422 26.5269 24.7422 26.4957C24.7734 26.4332 24.7734 26.3394 24.7422 26.2769L23.1172 22.9957C23.1172 22.9957 22.5234 21.5894 22.4609 19.8394C23.0234 19.4332 23.4609 18.8394 23.7109 18.1832C23.7734 18.0269 23.8672 17.7457 23.9297 17.4957C24.2109 17.4332 24.4609 17.2144 24.5859 16.9332C24.6484 16.8082 24.6484 16.6832 24.6484 16.5582C24.6797 16.5582 24.6797 16.5269 24.7109 16.5269C24.7734 16.4644 24.8359 16.3707 24.8359 16.2769C24.8359 16.2457 24.8359 15.9644 24.7734 15.6207L24.7734 15.5894L25.4297 13.5894L25.4297 13.5269L25.6797 11.9332C25.8359 11.4332 25.5859 10.8707 25.0547 10.6832C24.9297 10.6519 24.8359 10.6207 24.7109 10.6207C24.4609 10.6207 24.1797 10.7144 23.9922 10.9019C23.8984 10.9957 23.8047 11.1207 23.7422 11.2769L23.7422 11.3394L23.4922 12.8707C22.3047 11.3082 20.0859 10.1207 19.9922 10.0582C19.9922 9.99567 19.9297 9.99567 19.8672 9.99567C19.7734 9.99567 19.7109 10.0269 19.6484 10.0894C19.5547 10.1832 17.5234 12.2457 16.5859 13.3707L16.4609 12.9644L16.2109 11.3394L16.2109 11.2769C16.1484 11.1207 16.0859 10.9957 15.9609 10.9019C15.7734 10.7144 15.5234 10.6207 15.2422 10.6207C15.1172 10.6207 15.0234 10.6519 14.8984 10.6832C14.6484 10.7769 14.4297 10.9644 14.3359 11.2144C14.2422 11.4019 14.2109 11.6832 14.3047 11.9019ZM15.9609 29.1207C15.8984 29.2457 15.8047 29.3082 15.7109 29.3707C15.5859 29.4019 15.4609 29.4019 15.3672 29.3707C15.2109 29.3082 15.0859 29.1207 15.0859 28.9644C15.0859 28.9019 15.0859 28.8394 15.1172 28.7769L16.1172 26.9019L16.4922 27.0894L16.9297 27.3082L15.9609 29.1207ZM25.1172 28.9332C25.1172 29.1207 25.0234 29.2769 24.8359 29.3394C24.8047 29.3707 24.7422 29.4019 24.6797 29.4019C24.6172 29.4019 24.5859 29.4019 24.5234 29.3707C24.3984 29.3394 24.3047 29.2457 24.2422 29.1207L23.2422 27.2769L24.0859 26.8707L25.0859 28.7457C25.1172 28.8082 25.1172 28.8707 25.1172 28.9332ZM23.8984 26.3082L22.7109 26.8707L22.6797 26.8707C22.4609 26.6832 22.0547 26.3082 21.6172 25.9644C20.7734 25.2769 19.6172 25.2457 18.7109 25.8394C18.2109 26.1832 17.7734 26.5269 17.4922 26.8394L16.1484 26.2144L17.4609 23.4332L22.6484 23.4019L24.0547 26.2457L23.8984 26.3082ZM22.4297 22.8082L17.8047 22.8082C18.1172 22.0894 18.2422 21.1207 18.3047 20.2457L18.4922 20.3394L18.5234 20.3394C18.9297 20.4957 19.3359 20.5582 19.7422 20.5894C20.5234 20.6519 21.2422 20.4644 21.8672 20.1519C21.9609 21.3394 22.2422 22.2769 22.4297 22.8082ZM24.0234 16.6519C23.9609 16.7769 23.8359 16.8707 23.6797 16.8707C23.5234 16.8707 23.3984 16.9644 23.3672 17.1207C23.3359 17.3082 23.2422 17.6832 23.1484 17.9332C22.6484 19.2769 21.2734 20.0894 19.7734 19.9957C19.3984 19.9644 19.0547 19.9019 18.7109 19.7769C18.6797 19.7769 18.6797 19.7769 18.6484 19.7457C17.2422 19.2144 16.2734 17.9019 16.2734 16.4957C16.2734 16.3394 16.1484 16.2144 15.9922 16.1832C15.9922 16.1832 15.9609 16.1832 15.9297 16.1519C15.7734 16.0894 15.6797 15.9019 15.7422 15.7457L15.7422 15.6832C15.7734 15.6519 15.7734 15.6207 15.8047 15.6207C15.8359 15.5894 15.8984 15.5582 15.9609 15.5269L16.0234 15.5269C16.1172 15.5269 16.2422 15.5269 16.4297 15.4957L16.4609 15.4957C16.5547 15.4644 16.6797 15.4332 16.8047 15.4019C16.8672 15.3707 16.9297 15.3707 17.0234 15.3394L17.0547 15.3394C17.1484 15.3082 17.2109 15.2769 17.3047 15.2457C17.6797 15.0894 18.0859 14.8394 18.6172 14.4957L18.6484 14.4644C18.8047 14.5582 19.0547 14.7144 19.3359 14.8707C19.4297 14.9332 19.5547 14.9644 19.6484 15.0269L19.6797 15.0269C19.7734 15.0582 19.8984 15.1207 20.0234 15.1519L20.0547 15.1519L20.4297 15.2457L20.4922 15.2457C20.6172 15.2769 20.7734 15.3082 20.8984 15.3082C21.0547 15.3394 21.1797 15.3394 21.3359 15.3394L21.7422 15.3394C21.8047 15.3394 21.8359 15.3394 21.8984 15.3082C21.9609 15.3082 21.9922 15.3082 22.0547 15.2769C22.1172 15.2769 22.1797 15.2457 22.2109 15.2457C22.2734 15.2457 22.3047 15.2144 22.3672 15.2144C22.4297 15.2144 22.4922 15.1832 22.5234 15.1832C22.6172 15.3082 22.7422 15.4957 22.9297 15.6519C23.1172 15.8394 23.3672 16.0269 23.6484 16.1832C23.6484 16.1832 23.6797 16.1832 23.6797 16.2144L23.7109 16.2144C24.0234 16.3707 24.0859 16.5269 24.0234 16.6519ZM24.0859 13.1207L24.0859 13.0582L24.3672 11.4332C24.3984 11.3707 24.3984 11.3394 24.4609 11.3082C24.5547 11.2144 24.7422 11.1519 24.8672 11.2144C25.0859 11.2769 25.1797 11.5269 25.1172 11.7144L25.1172 11.7769L24.8672 13.3707L24.4922 14.4644C24.4609 14.3707 24.4297 14.2769 24.3672 14.1832C24.3672 14.1519 24.3359 14.1207 24.3359 14.1207L24.3359 14.0894C24.3359 14.0582 24.3047 14.0582 24.3047 14.0269L24.3047 13.9957C24.2422 13.8707 24.1484 13.7457 24.0859 13.6519C24.0547 13.5894 24.0234 13.5582 23.9922 13.4957L24.0859 13.1207ZM19.9297 10.6832C20.5547 11.0582 22.5859 12.3082 23.3672 13.7144C23.3984 13.8082 23.4922 13.9019 23.5547 13.9957C23.6172 14.0894 23.7109 14.2144 23.7422 14.3082C23.7422 14.3394 23.7734 14.3394 23.7734 14.3707C23.8984 14.5894 23.9609 14.8082 24.0234 15.0269C24.0234 15.0582 24.0234 15.0894 24.0547 15.1207C24.0859 15.1832 24.0859 15.2457 24.1172 15.3082C24.1172 15.3707 24.1484 15.4332 24.1484 15.4644L24.1484 15.7144L24.1172 15.7144C24.1172 15.7144 24.0859 15.7144 24.0859 15.6832C23.8047 15.5269 23.5859 15.3707 23.4297 15.2144C23.1797 14.9332 23.0547 14.7144 23.0547 14.7144C23.0234 14.6519 22.9609 14.5894 22.8984 14.5582C22.8359 14.5269 22.7422 14.5269 22.6797 14.5582C20.6172 15.2769 18.8984 13.8707 18.8984 13.8707C18.8672 13.8394 18.8047 13.8082 18.7422 13.8082L18.6172 13.8082C18.5859 13.8082 18.5547 13.8394 18.5547 13.8394C18.5234 13.8707 18.4922 13.8707 18.4609 13.9019C17.3984 14.6207 16.7109 14.8394 16.3672 14.9019C16.3984 14.8082 16.4297 14.6832 16.4609 14.5894C16.5234 14.4332 16.6172 14.2769 16.7109 14.1207C17.1797 13.4957 19.3359 11.3082 19.9297 10.6832ZM14.8984 11.4332C14.9297 11.3394 15.0234 11.2769 15.1172 11.2144C15.2734 11.1519 15.4297 11.1832 15.5547 11.3082C15.5859 11.3394 15.6172 11.3707 15.6484 11.4332L15.8984 13.0582L15.8984 13.1207L16.1797 13.9644C16.1484 13.9957 16.1484 14.0269 16.1172 14.0894C16.1172 14.1207 16.0859 14.1519 16.0859 14.1832C16.0547 14.2769 15.9922 14.3707 15.9609 14.4332L15.8672 14.7144C15.8672 14.7457 15.8672 14.7769 15.8359 14.7769C15.8047 14.8394 15.8047 14.9332 15.8047 14.9957L15.8047 15.0269L15.7734 15.0269C15.7422 15.0269 15.7109 15.0582 15.7109 15.0582L15.1484 13.4019L14.8984 11.8082L14.8984 11.7457C14.8359 11.6519 14.8359 11.5269 14.8984 11.4332Z" fill="white" />
                                    </g>
                                    <defs>
                                        <linearGradient id="paint0_linear_778_6323" x1="21.4492" y1="0.5" x2="21.4491" y2="41.75" gradientUnits="userSpaceOnUse">
                                            <stop stopColor="#FC8C66" />
                                            <stop offset="1" stopColor="#F76A7B" />
                                        </linearGradient>
                                        <clipPath id="clip0_778_6323">
                                            <rect width="20" height="20" fill="white" transform="translate(10 10)" />
                                        </clipPath>
                                    </defs>
                                </svg>
                                <p>What about kids?</p>
                            </Container>
                            <div style={{
                                maxHeight: "50vh",
                                overflow: "auto",
                            }}>
                                <div className="job-columns">
                                    {kidsOptions.map((kid, index) => (
                                        <div
                                            key={index}
                                            className='job-item'
                                            onClick={() => setSelectedHaveKids(kid)}
                                            style={{
                                                backgroundColor: selectedHaveKids === kid ? '#F7ECFF' : 'transparent',
                                            }}
                                        >
                                            {kid}
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </Container>
                    <Container className='job-details'>
                        <div className='your-job'>
                            <Container className='job-text'>
                                <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <circle cx="20" cy="20" r="18" fill="url(#paint0_linear_778_6333)" />
                                    <path d="M14.2416 22.8501H15.3504C15.7747 22.8501 16.1817 22.6745 16.4817 22.362C16.7818 22.0494 16.9504 21.6255 16.9504 21.1835V19.471C16.9504 19.0289 16.7818 18.605 16.4817 18.2925C16.1817 17.9799 15.7747 17.8043 15.3504 17.8043H14.2416C13.8172 17.8043 13.4102 17.9799 13.1102 18.2925C12.8101 18.605 12.6416 19.0289 12.6416 19.471V21.1835C12.6416 21.6255 12.8101 22.0494 13.1102 22.362C13.4102 22.6745 13.8172 22.8501 14.2416 22.8501ZM13.4416 19.471C13.4416 19.25 13.5258 19.038 13.6759 18.8817C13.8259 18.7254 14.0294 18.6376 14.2416 18.6376H15.3504C15.5625 18.6376 15.766 18.7254 15.916 18.8817C16.0661 19.038 16.1504 19.25 16.1504 19.471V21.1835C16.1504 21.4045 16.0661 21.6164 15.916 21.7727C15.766 21.929 15.5625 22.0168 15.3504 22.0168H14.2416C14.0294 22.0168 13.8259 21.929 13.6759 21.7727C13.5258 21.6164 13.4416 21.4045 13.4416 21.1835V19.471ZM17.4496 24.9076C17.3647 24.9739 17.258 25.0024 17.153 24.9868C17.048 24.9711 16.9532 24.9127 16.8896 24.8243C16.7503 24.6298 16.5692 24.472 16.3608 24.3636C16.1524 24.2552 15.9225 24.1992 15.6896 24.2001H13.9024C13.5044 24.2008 13.1229 24.3658 12.8416 24.659C12.5602 24.9523 12.402 25.3497 12.4016 25.7643V26.5343C13.1695 26.8132 13.9823 26.933 14.7944 26.8868C15.3028 26.8987 15.8113 26.8658 16.3144 26.7885C16.419 26.7699 16.5264 26.7954 16.6129 26.8593C16.6995 26.9232 16.7581 27.0203 16.776 27.1293C16.7938 27.2383 16.7693 27.3501 16.708 27.4403C16.6466 27.5305 16.5534 27.5916 16.4488 27.6101C15.9018 27.6958 15.3489 27.7326 14.796 27.7201C13.7796 27.7858 12.7626 27.6004 11.828 27.1793C11.7602 27.1453 11.703 27.0921 11.663 27.0257C11.6229 26.9594 11.6016 26.8827 11.6016 26.8043V25.7643C11.6022 25.1289 11.8448 24.5196 12.2762 24.0703C12.7075 23.621 13.2923 23.3683 13.9024 23.3676H15.6864C16.0436 23.3659 16.3961 23.4515 16.7157 23.6177C17.0353 23.7839 17.313 24.0259 17.5264 24.3243C17.5901 24.4126 17.6176 24.5237 17.6027 24.633C17.5879 24.7424 17.5319 24.8412 17.4472 24.9076H17.4496ZM28.4016 25.7643V26.8043C28.4016 26.8825 28.3806 26.9591 28.3408 27.0254C28.3011 27.0917 28.2442 27.1451 28.1768 27.1793C27.2421 27.6004 26.2252 27.7858 25.2088 27.7201C24.6558 27.7326 24.1029 27.6958 23.556 27.6101C23.5042 27.601 23.4546 27.5812 23.4101 27.5521C23.3657 27.523 23.3271 27.485 23.2967 27.4403C23.2663 27.3957 23.2447 27.3452 23.233 27.2919C23.2214 27.2385 23.2199 27.1833 23.2288 27.1293C23.2479 27.021 23.3069 26.9249 23.3931 26.8612C23.4793 26.7975 23.586 26.7714 23.6904 26.7885C24.1935 26.8658 24.7019 26.8987 25.2104 26.8868C26.0219 26.9327 26.8342 26.813 27.6016 26.5343V25.7643C27.6009 25.3499 27.4426 24.9526 27.1613 24.6596C26.88 24.3665 26.4986 24.2016 26.1008 24.201H24.3168C24.0838 24.2 23.8539 24.256 23.6455 24.3644C23.4371 24.4728 23.256 24.6306 23.1168 24.8251C23.0852 24.8689 23.0458 24.9058 23.0006 24.9337C22.9554 24.9615 22.9053 24.9799 22.8533 24.9876C22.8013 24.9953 22.7484 24.9923 22.6975 24.9788C22.6466 24.9652 22.5988 24.9413 22.5568 24.9085C22.5147 24.8756 22.4793 24.8345 22.4526 24.7874C22.4258 24.7403 22.4082 24.6882 22.4008 24.6341C22.3934 24.5799 22.3962 24.5247 22.4093 24.4717C22.4223 24.4187 22.4452 24.3689 22.4768 24.3251C22.6901 24.0267 22.9678 23.7847 23.2874 23.6185C23.607 23.4524 23.9596 23.3667 24.3168 23.3685H26.1008C26.7106 23.3691 27.2954 23.6217 27.7267 24.0709C28.158 24.52 28.4007 25.129 28.4016 25.7643ZM19.6112 20.2768C19.2505 20.2768 18.9045 20.4261 18.6495 20.6917C18.3944 20.9574 18.2512 21.3177 18.2512 21.6935V22.9343C18.2512 23.31 18.3944 23.6704 18.6495 23.936C18.9045 24.2017 19.2505 24.351 19.6112 24.351H20.392C20.7527 24.351 21.0986 24.2017 21.3536 23.936C21.6087 23.6704 21.752 23.31 21.752 22.9343V21.6935C21.752 21.3177 21.6087 20.9574 21.3536 20.6917C21.0986 20.4261 20.7527 20.2768 20.392 20.2768H19.6112ZM20.952 21.6935V22.9343C20.952 23.089 20.893 23.2374 20.7879 23.3468C20.6829 23.4562 20.5405 23.5176 20.392 23.5176H19.6112C19.4626 23.5176 19.3202 23.4562 19.2152 23.3468C19.1102 23.2374 19.0512 23.089 19.0512 22.9343V21.6935C19.0512 21.5388 19.1102 21.3904 19.2152 21.281C19.3202 21.1716 19.4626 21.1101 19.6112 21.1101H20.392C20.5405 21.1101 20.6829 21.1716 20.7879 21.281C20.893 21.3904 20.952 21.5388 20.952 21.6935ZM20.6872 24.8285H19.316C18.822 24.8287 18.3483 25.0331 17.999 25.3969C17.6496 25.7606 17.4532 26.2539 17.4528 26.7685V27.5685C17.4528 27.6467 17.4739 27.7234 17.5138 27.7897C17.5537 27.8561 17.6107 27.9093 17.6784 27.9435C18.4088 28.2735 19.2037 28.4191 19.9984 28.3685C20.793 28.4191 21.588 28.2735 22.3184 27.9435C22.386 27.9093 22.443 27.8561 22.4829 27.7897C22.5228 27.7234 22.544 27.6467 22.544 27.5685V26.7685C22.5435 26.2551 22.348 25.7628 22 25.3992C21.652 25.0357 21.18 24.8304 20.6872 24.8285ZM21.7504 27.2951C21.1868 27.4878 20.5938 27.5691 20.0016 27.5351C19.4094 27.5691 18.8163 27.4878 18.2528 27.2951V26.7685C18.2532 26.4749 18.3654 26.1936 18.5647 25.9861C18.764 25.7787 19.0342 25.662 19.316 25.6618H20.6872C20.9689 25.662 21.2391 25.7787 21.4384 25.9861C21.6378 26.1936 21.7499 26.4749 21.7504 26.7685V27.2951ZM23.0528 21.1835C23.0528 21.6255 23.2213 22.0494 23.5214 22.362C23.8214 22.6745 24.2284 22.8501 24.6528 22.8501H25.7616C26.1859 22.8501 26.5929 22.6745 26.8929 22.362C27.193 22.0494 27.3616 21.6255 27.3616 21.1835V19.471C27.3616 19.0289 27.193 18.605 26.8929 18.2925C26.5929 17.9799 26.1859 17.8043 25.7616 17.8043H24.6528C24.2284 17.8043 23.8214 17.9799 23.5214 18.2925C23.2213 18.605 23.0528 19.0289 23.0528 19.471V21.1835ZM23.8528 19.471C23.8528 19.25 23.937 19.038 24.0871 18.8817C24.2371 18.7254 24.4406 18.6376 24.6528 18.6376H25.7616C25.9737 18.6376 26.1772 18.7254 26.3272 18.8817C26.4773 19.038 26.5616 19.25 26.5616 19.471V21.1835C26.5616 21.4045 26.4773 21.6164 26.3272 21.7727C26.1772 21.929 25.9737 22.0168 25.7616 22.0168H24.6528C24.4406 22.0168 24.2371 21.929 24.0871 21.7727C23.937 21.6164 23.8528 21.4045 23.8528 21.1835V19.471ZM19.1776 17.981C19.4264 18.1367 19.7113 18.219 20.0016 18.219C20.2919 18.219 20.5767 18.1367 20.8256 17.981C22.8888 16.6943 23.1968 15.3018 23.1968 14.5868C23.2142 14.3242 23.1814 14.0607 23.1002 13.8115C23.019 13.5622 22.891 13.3323 22.7238 13.135C22.5565 12.9378 22.3533 12.7771 22.1259 12.6624C21.8985 12.5477 21.6514 12.4812 21.3992 12.4668C20.8895 12.4671 20.3957 12.6511 20.0016 12.9876C19.6074 12.6511 19.1136 12.4671 18.604 12.4668C18.3519 12.4812 18.1051 12.5476 17.8779 12.6622C17.6506 12.7767 17.4475 12.9372 17.2803 13.1342C17.113 13.3311 16.985 13.5608 16.9037 13.8097C16.8223 14.0586 16.7892 14.3219 16.8064 14.5843C16.8064 15.3018 17.1144 16.6943 19.1776 17.981ZM18.604 13.3001C18.8091 13.3008 19.0118 13.3477 19.1979 13.4376C19.384 13.5275 19.5493 13.6583 19.6824 13.821C19.7212 13.8702 19.7701 13.9098 19.8254 13.937C19.8807 13.9642 19.9412 13.9784 20.0024 13.9784C20.0635 13.9784 20.124 13.9642 20.1793 13.937C20.2346 13.9098 20.2835 13.8702 20.3224 13.821C20.4562 13.6599 20.6215 13.5303 20.8071 13.4409C20.9928 13.3516 21.1946 13.3044 21.3992 13.3026C21.5455 13.3185 21.6873 13.3643 21.8166 13.4373C21.9459 13.5104 22.0602 13.6092 22.1528 13.7282C22.2454 13.8472 22.3147 13.9841 22.3565 14.131C22.3984 14.2779 22.4121 14.4319 22.3968 14.5843C22.3968 15.501 21.6768 16.4776 20.4152 17.2643C20.2897 17.3408 20.1469 17.3812 20.0016 17.3812C19.8562 17.3812 19.7134 17.3408 19.588 17.2643C18.3288 16.4801 17.6064 15.501 17.6064 14.5843C17.5907 14.4317 17.6042 14.2774 17.6459 14.1302C17.6876 13.9831 17.7567 13.8459 17.8494 13.7266C17.9421 13.6073 18.0564 13.5083 18.1859 13.4351C18.3154 13.3619 18.4574 13.316 18.604 13.3001Z" fill="white" />
                                    <defs>
                                        <linearGradient id="paint0_linear_778_6333" x1="21.4492" y1="0.5" x2="21.4491" y2="41.75" gradientUnits="userSpaceOnUse">
                                            <stop stop-color="#FC8C66" />
                                            <stop offset="1" stop-color="#F76A7B" />
                                        </linearGradient>
                                    </defs>
                                </svg>

                                <p>What about family plans?</p>
                            </Container>
                            <div style={{
                                maxHeight: "50vh",
                                overflow: "auto",
                            }}>
                                <div className="job-columns">
                                    {familyOptions.map((family, index) => (
                                        <div
                                            key={index}
                                            className='job-item'
                                            onClick={() => setSelectedWantKids(family)}
                                            style={{
                                                backgroundColor: selectedWantKids === family ? '#F7ECFF' : 'transparent',
                                            }}
                                        >
                                            {family}
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </Container>
                    <div style={{
                        display: "flex",
                        width: "100%",
                        gap: "5rem",
                        marginTop: "auto",
                        marginBottom: "2rem",
                    }}>
                        <Button variant="primary" style={{
                            width: "100%",
                            marginTop: "1rem",
                            background: "white",
                            border: "2px solid #6c6c6c",
                            borderRadius: "9999px",
                            padding: "0.75rem",
                            fontSize: "1.25rem",
                            fontWeight: "bold",
                            color: "#6c6c6c",
                        }}>
                            Ask me later
                        </Button>
                        <Button variant="primary" style={{
                            width: "100%",
                            marginTop: "1rem",
                            background: "linear-gradient(180deg, #FC8C66 -4.17%, #F76A7B 110.42%)",
                            border: "none",
                            borderRadius: "9999px",
                            padding: "0.75rem",
                            fontSize: "1.25rem",
                            fontWeight: "bold",
                        }} onClick={saveAll}>
                            Next
                        </Button>
                    </div>
                </Container>
            </Container>
        </div>
    );
};



